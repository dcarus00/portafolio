version: '3.8'
services:
  prometheus:
    image: prom/prometheus:v2.44.0
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:9.5.0
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./certs:/etc/grafana/certs:ro
    networks:
      - monitoring
    environment:
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_admin_password
      - GF_SERVER_PROTOCOL=https
      - GF_SERVER_CERT_FILE=/etc/grafana/certs/grafana.crt
      - GF_SERVER_KEY_FILE=/etc/grafana/certs/grafana.key
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: unless-stopped
    secrets:
      - grafana_admin_password

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD_FILE=/run/secrets/elastic_password
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./certs:/usr/share/elasticsearch/config/certs:ro
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 2G
        reservations:
          cpus: '0.50'
          memory: 1G
    restart: unless-stopped
    secrets:
      - elastic_password
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_PASSWORD_FILE=/run/secrets/elastic_password
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
      - ./certs:/usr/share/kibana/config/certs:ro
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M
    restart: unless-stopped
    secrets:
      - elastic_password

  jenkins:
    image: jenkins/jenkins:lts-2.387.1
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 2G
        reservations:
          cpus: '0.50'
          memory: 1G
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certs:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --email ${EMAIL_ADDRESS} -d ${DOMAIN_NAME} --agree-tos
    deploy:
      restart_policy:
        condition: none

  backup:
    image: amazon/aws-cli:latest
    volumes:
      - prometheus_data:/backup/prometheus:ro
      - elasticsearch_data:/backup/elasticsearch:ro
      - grafana_data:/backup/grafana:ro
      - ./backup/backup-script.sh:/backup-script.sh:ro
    environment:
      - AWS_ACCESS_KEY_ID_FILE=/run/secrets/aws_access_key
      - AWS_SECRET_ACCESS_KEY_FILE=/run/secrets/aws_secret_key
      - BACKUP_BUCKET=${BACKUP_BUCKET_NAME}
    entrypoint: ["/backup-script.sh"]
    deploy:
      restart_policy:
        condition: none
    secrets:
      - aws_access_key
      - aws_secret_key

  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    networks:
      - monitoring
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring
    restart: unless-stopped

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    volumes:
      - ./blackbox:/config
    command:
      - '--config.file=/config/blackbox.yml'
    networks:
      - monitoring
    restart: unless-stopped

volumes:
  jenkins_home:
  prometheus_data:
  elasticsearch_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge

secrets:
  grafana_admin_password:
    file: ./secrets/grafana_admin_password.txt
  elastic_password:
    file: ./secrets/elastic_password.txt
  aws_access_key:
    file: ./secrets/aws_access_key.txt
  aws_secret_key:
    file: ./secrets/aws_secret_key.txt
